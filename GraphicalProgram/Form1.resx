<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAKBEAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8qvozP6v89kCr/EwAAAAAAAAAADk1MDo5NTA6AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP6z8WUCr/P9Aqv14AAAAAzs1L4E9NzH7PTcx+zs1
        L4EAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD+s/FlAq/z/PqDqhDw3MbY9NzH/PTcx/z03
        Mf89NzH/PDYxtysrKwwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0y/11fdH8/12NqPk9NzH/PTcx/z03
        Mf89NzH/PTcx/z03Mf88NTDELi4uCwAAAAAAAAAAAAAAAAAAAAAAAAAAiNj+vE6z/P99weD/PTcx/z86
        M/9FQDj/RUA4/z86M/89NzH/PTcx/zw2MZgAAAAAAAAAAAAAAAAAAAAAAAAAAInZ/0NGsP30Vm12/0E8
        Nf9FQDj/RkE5/0ZBOf9GQTn/QTw1/z03Mf88NjHcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP6r91kJK
        TP9GQTn/RkE5/0ZBOf9GQTn/RkE5/0ZBOf9DPjb/PTcxogAAAAAAAAAAAAAAAAAAAAAAAAAAQz82OUNk
        eedAm+D/RFNa/0ZBOf9GQTn/RkE5/0ZBOf9GQTn/RkE5/0VBOeVDPzY5AAAAAAAAAAAAAAAARUA3a0VA
        OPpGQTn/RFll/0Cc4f9EXGv/RUA4/0VAOP9GQTn/RkE5/0ZBOf9GQTn/RUA4+kRANmwAAAAAREA5bEZB
        Of9GQTn/RkE5/0ZBOf9EUFb/QIrC/z03Mf89NzH/RD83/0ZBOf9GQTn/RkE5/0ZBOf9GQTn/Rj84bkZA
        MyhGQDncRkE5/0ZBOf9GQTn/RkE5/0M+N/89NzH/PTcx/0M+Nv9GQTn/RkE5/0ZBOf9GQTn/RkE53EZA
        MygAAAAARDMzD0VAObRGQTn/RkE5/0ZBOf9FQDj/Qjw1/0I8Nf9FQDj/RkE5/0ZBOf9GQTn/RUA5tEQz
        Mw8AAAAAAAAAAAAAAAAAAAABRT83fUZBOfxGQTn/RkE5/0ZBOf9GQTn/RkE5/0ZBOf9GQTn8RT83fQAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABEPTZHRUE47EZBOf9GQTn/RkE5/0ZBOf9FQTjsRD02RwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEJCMR9FQDjMRkE5/0ZBOf9GQTjNQkI6HwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASSQkB0RAOINEQDiEQEAgCAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAAAIAAAAEAAAAABACAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6qvowP6v95j+r/PVArPxcAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD+r/J1Aq/z/QKv8/z+s/dYAAAAAAAAAAAAA
        AAAAAAAAAAAAADkyMiQ9NjDFPTYxxjc3MCUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQKv8s0Cr/P9Aq/z/QKv98AAA
        AAAAAAAAAAAAAAAAAAA7NjFjPDcw8j03Mf89NzH/PTcw8js2MGQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAq/yzQKv8/0Cr
        /P9Aq/3wAAAAAAAAAAAzMzMPOzUwoz03Mf89NzH/PTcx/z03Mf89NzH/PTcx/z01MKMzMzMPAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAECr
        /LNAq/z/QKv8/0Cr/fAAAAAAODAwIDw2MdA9NzH/PTcx/z03Mf89NzH/PTcx/z03Mf89NzH/PTcx/zw3
        MdA2Ni4hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAQKv8s0Cr/P9Aq/z/QKv98Do1MDA9NzHsPTcx/z03Mf89NzH/PTcx/z03Mf89NzH/PTcx/z03
        Mf89NzH/PTcx/zw3MO06NTAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABWuPy0csr8/3XM/P9Yt/f4PTYx8D03Mf89NzH/PTcx/z03Mf89NzH/PTcx/z03
        Mf89NzH/PTcx/z03Mf89NzH/PTcx/z02MfA9My4yAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAidj/J4jY/fmI2P3/iNj9/4jY/f9Wbnf/PTcx/z03Mf89NzH/PTcx/z03
        Mf8+OTL/Pjky/z03Mf89NzH/PTcx/z03Mf89NzH/PTcx/z02MO89NywuAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACI2f1+iNj9/1u8/P9Msvz/iNj9/3Svyf89NzH/PTcx/z03
        Mf89ODH/RD43/0ZBOf9GQTn/RD43/z04Mf89NzH/PTcx/z03Mf89NzH/PTcx/z03Mds3NyQOAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIjY/XaI2P3/Ubb8/0Cr/P+I2P3/caa+/z03
        Mf89NzH/Pzky/0VAOP9GQTn/RkE5/0ZBOf9GQTn/RUA4/z85Mv89NzH/PTcx/z03Mf89NzH/PTcx/z03
        MHkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjNn/FIjX/edRtvz/QKv8/4bU
        +P9OXGD/PTcx/0A7NP9FQDj/RkE5/0ZBOf9GQTn/RkE5/0ZBOf9GQTn/RkE5/0A7NP89NzH/PTcx/z03
        Mf89NzH/PDcwvwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjNn/FEew
        /dZAq/z/SFBQ/z03Mf9CPTb/RkE5/0ZBOf9GQTn/RkE5/0ZBOf9GQTn/RkE5/0ZBOf9GQTn/RkE5/0I9
        Nv89NzH/PTcx/z03Mf88NzG2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAQKv8v0Cr/P8+ODL/RD83/0ZBOf9GQTn/RkE5/0ZBOf9GQTn/RkE5/0ZBOf9GQTn/RkE5/0ZB
        Of9GQTn/RkE5/0Q/N/8+ODL/PTcx/z02L3EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAA/q/ydQKv8/0JwkP9GQTn/RkE5/0ZBOf9GQTn/RkE5/0ZBOf9GQTn/RkE5/0ZB
        Of9GQTn/RkE5/0ZBOf9GQTn/RkE5/0VAOP8/OjP+PjUsHQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAkRWX6FApO//QKv8/0J+qv9GQTn/RkE5/0ZBOf9GQTn/RkE5/0ZB
        Of9GQTn/RkE5/0ZBOf9GQTn/RkE5/0ZBOf9GQTn/RkE5/0ZBOf9FQDeYAAAAAwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAD09MxlFQDnLRkE5/0VRV/9Am97/QKv8/0GGuP9FRD//RkE5/0ZB
        Of9GQTn/RkE5/0ZBOf9GQTn/RkE5/0ZBOf9GQTn/RkE5/0ZBOf9GQTn/RkE5/0ZBOf9FQDnLPT0zGQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABCPjU+RUE47UZBOf9GQTn/RkE5/0VIRv9BltX/QKv8/0GV
        0/9FR0X/RkE5/0ZBOf9GQTn/RkE5/0ZBOf9GQTn/RkE5/0ZBOf9GQTn/RkE5/0ZBOf9GQTn/RkE5/0ZB
        Of9GQTjtQT01PwAAAAAAAAAAAAAAAAAAAAAAAAAARUA3c0VAOP5GQTn/RkE5/0ZBOf9GQTn/RkE5/0VF
        Qf9Bh7r/QKv8/0CZ2/9FUFT/RkE5/0Q/N/9EPzf/RkE5/0ZBOf9GQTn/RkE5/0ZBOf9GQTn/RkE5/0ZB
        Of9GQTn/RkE5/0ZBOf9FQDj+REA3dAAAAAAAAAAAAAAAAEVAOJ9GQTn/RkE5/0ZBOf9GQTn/RkE5/0ZB
        Of9GQTn/RkE5/0VBOf9CgK3/QKv8/0Ce5P8/OTP/PTcx/z03Mf8/OTL/RUA4/0ZBOf9GQTn/RkE5/0ZB
        Of9GQTn/RkE5/0ZBOf9GQTn/RkE5/0ZBOf9GQTn/RUA4nwAAAABAMzMURkE5/0ZBOf9GQTn/RkE5/0ZB
        Of9GQTn/RkE5/0ZBOf9GQTn/RkE5/0ZBOf9DbYv/PnWd/z03Mf89NzH/PTcx/z03Mf9BPDX/RkE5/0ZB
        Of9GQTn/RkE5/0ZBOf9GQTn/RkE5/0ZBOf9GQTn/RkE5/0ZBOf9GQTn/QDcuHAAAAABGPzehRkE5/0ZB
        Of9GQTn/RkE5/0ZBOf9GQTn/RkE5/0ZBOf9GQTn/RkE5/0ZBOf8/PDf/PTcx/z03Mf89NzH/PTcx/z86
        M/9GQTn/RkE5/0ZBOf9GQTn/RkE5/0ZBOf9GQTn/RkE5/0ZBOf9GQTn/RkE5/0VBN6IAAAAAAAAAAAAA
        AABFPzh2RUA4/kZBOf9GQTn/RkE5/0ZBOf9GQTn/RkE5/0ZBOf9GQTn/RkE5/0I8Nf89NzH/PTcx/z03
        Mf89NzH/Qjw1/0ZBOf9GQTn/RkE5/0ZBOf9GQTn/RkE5/0ZBOf9GQTn/RkE5/0VAOP5FQDh3AAAAAAAA
        AAAAAAAAAAAAAAAAAABDPzY9RkA57kZBOf9GQTn/RkE5/0ZBOf9GQTn/RkE5/0ZBOf9GQTn/RUA4/0A6
        M/89NzH/PTcx/0A6M/9FQDj/RkE5/0ZBOf9GQTn/RkE5/0ZBOf9GQTn/RkE5/0ZBOf9GQDnuQj41PgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7OzEaRUA5ykZBOf9GQTn/RkE5/0ZBOf9GQTn/RkE5/0ZB
        Of9GQTn/RkE5/0VAOP9FQDj/RkE5/0ZBOf9GQTn/RkE5/0ZBOf9GQTn/RkE5/0ZBOf9GQTn/RUA5y0I5
        LxsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzMzMFRD83mUZBOf9GQTn/RkE5/0ZB
        Of9GQTn/RkE5/0ZBOf9GQTn/RkE5/0ZBOf9GQTn/RkE5/0ZBOf9GQTn/RkE5/0ZBOf9GQTn/RkE5/0Q/
        OJozMzMFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAART83XUZB
        OPVGQTn/RkE5/0ZBOf9GQTn/RkE5/0ZBOf9GQTn/RkE5/0ZBOf9GQTn/RkE5/0ZBOf9GQTn/RkE5/0ZB
        OPVFPzddAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAQEA1MEVBOd1GQTn/RkE5/0ZBOf9GQTn/RkE5/0ZBOf9GQTn/RkE5/0ZBOf9GQTn/RkE5/0ZB
        Of9FQTndRUA1MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAARDMzD0ZAOLNGQTn/RkE5/0ZBOf9GQTn/RkE5/0ZBOf9GQTn/RkE5/0ZB
        Of9GQTn/RUA3tEQzMw8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEVBN35FQDj+RkE5/0ZBOf9GQTn/RkE5/0ZB
        Of9GQTn/RkE5/0RAOH8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAENANUhGQDnuRkE5/0ZB
        Of9GQTn/RkE5/0ZAOe5CPzhJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEI6
        MR9FQDnORkE5/0ZBOf9FQDnOQEA4IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAFDPzdBQj42QgAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>